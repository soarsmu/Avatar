import ast
import json
from scipy.stats import mannwhitneyu
from numpy import mean, std 
from math import sqrt
import matplotlib.pyplot as plt
import matplotlib


all_mse = []
all_mae = []
all_time = []

with open("surrogate_pred_errors_.jsonl") as f:
    for line in f:
        temp = json.loads(line.strip())
        all_mse.append(ast.literal_eval(temp["mse"]))
        all_mae.append(ast.literal_eval(temp["mae"]))
        all_time.append(ast.literal_eval(temp["time"]))

p_v = []
for mse_1 in all_mse:
    p_temp = []
    for mse_2 in all_mse:
        U1, p = mannwhitneyu(mse_1, mse_2, method="asymptotic")
        p_temp.append(p)
    p_v.append(p_temp)

p_v = []
for mse_1 in all_time:
    p_temp = []
    for mse_2 in all_time:
        U1, p = mannwhitneyu(mse_1, mse_2, method="asymptotic")
        p_temp.append(p)
    p_v.append(p_temp)

# print(p_v)
def cohen_d(x,y):
    return (mean(x) - mean(y)) / sqrt((std(x, ddof=1) ** 2 + std(y, ddof=1) ** 2) / 2.0)

p_v = []
d = []
for mse_1 in all_mae:
    p_temp = []
    d_temp = []
    for mse_2 in all_mae:
        U1, p = mannwhitneyu(mse_1, mse_2, method="asymptotic")
        p_temp.append(p)
        d_temp.append(cohen_d(mse_1, mse_2))
    p_v.append(p_temp)
    d.append(d_temp)

print(p_v)
print(d)



plt.rcParams["font.family"] = "Times New Roman"
fig, ax = plt.subplots(figsize=(6, 4))

labels = ["KR", "PR", "RBF", "EM", "EW"]
data = []
# with open('RQ-1-data.txt', 'r') as f:
#     for line in f:
#         tokens = line.strip().split(',')
#         labels.append(tokens[0])
#         alg_data = [float(tokens[i]) for i in range(1, len(tokens)-1)]
#         data.append(alg_data)

ax.boxplot(all_time, labels=labels, showmeans=True)


ax.set_ylabel('Size',fontsize=10)
ax.set_xlabel('Size', fontsize=10)
matplotlib.pyplot.yticks(fontsize=12)
matplotlib.pyplot.xticks(fontsize=12)
axes = plt.gca()

ax.set_ylabel('LSE')
ax.set_xlabel('LS Configuration')
plt.show()
fig.savefig('RQ1.pdf', bbox_inches='tight', dpi=300)

# fitness = []

# with open("best_genes.jsonl") as f:
#     for line in f:
#         fitness.append(float(line.strip()))

# # Data for plotting
# t = range(1, 101)

# fig, ax = plt.subplots()
# ax.plot(fitness, t)

# ax.set(xlabel='time (s)', ylabel='voltage (mV)',
#        title='About as simple as it gets, folks')

# fig.savefig("test.png")
# plt.show()

